--- grub-2.00/grub-core/commands/wildcard.c.0027~	2012-06-27 20:58:10.000000000 +0200
+++ grub-2.00/grub-core/commands/wildcard.c	2013-04-25 02:16:05.861330003 +0200
@@ -420,6 +420,12 @@ check_file (const char *dir, const char
   return found;
 }
 
+static int
+is_hex(char c)
+{
+  return ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'));
+}
+
 static void
 unescape (char *out, const char *in, const char *end)
 {
@@ -428,7 +434,15 @@ unescape (char *out, const char *in, con
 
   for (optr = out, iptr = in; iptr < end;)
     {
-      if (*iptr == '\\' && iptr + 1 < end)
+      if (*iptr == '\\' && iptr + 3 < end && iptr[1] == 'x' && is_hex(iptr[2]) && is_hex(iptr[3]))
+	{
+	  *optr++ = *iptr++;
+	  *optr++ = *iptr++;
+	  *optr++ = *iptr++;
+	  *optr++ = *iptr++;
+	  continue;
+	}
+      else if (*iptr == '\\' && iptr + 1 < end)
 	{
 	  *optr++ = iptr[1];
 	  iptr += 2;
--- grub-2.00/grub-core/lib/cmdline.c.0027~	2011-01-07 14:51:22.000000000 +0100
+++ grub-2.00/grub-core/lib/cmdline.c	2013-04-25 02:16:05.861330003 +0200
@@ -20,6 +20,12 @@
 #include <grub/lib/cmdline.h>
 #include <grub/misc.h>
 
+static int
+is_hex(char c)
+{
+  return ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'));
+}
+
 static unsigned int check_arg (char *c, int *has_space)
 {
   int space = 0;
@@ -27,7 +33,13 @@ static unsigned int check_arg (char *c,
 
   while (*c)
     {
-      if (*c == '\\' || *c == '\'' || *c == '"')
+      if (*c == '\\' && *(c+1) == 'x' && is_hex(*(c+2)) && is_hex(*(c+3)))
+	{
+	  size += 4;
+	  c += 4;
+	  continue;
+	}
+      else if (*c == '\\' || *c == '\'' || *c == '"')
 	size++;
       else if (*c == ' ')
 	space = 1;
@@ -82,7 +94,25 @@ int grub_create_loader_cmdline (int argc
 
       while (*c)
 	{
-	  if (*c == '\\' || *c == '\'' || *c == '"')
+	  if (*c == ' ')
+	    {
+	      *buf++ = '\\';
+	      *buf++ = 'x';
+	      *buf++ = '2';
+	      *buf++ = '0';
+	      c++;
+	      continue;
+	    }
+	  else if (*c == '\\' && *(c+1) == 'x' &&
+		   is_hex(*(c+2)) && is_hex(*(c+3)))
+	    {
+	      *buf++ = *c++;
+	      *buf++ = *c++;
+	      *buf++ = *c++;
+	      *buf++ = *c++;
+	      continue;
+	    }
+	  else if (*c == '\\' || *c == '\'' || *c == '"')
 	    *buf++ = '\\';
 
 	  *buf++ = *c;
--- grub-2.00/grub-core/script/execute.c.0027~	2012-06-21 17:05:12.000000000 +0200
+++ grub-2.00/grub-core/script/execute.c	2013-04-25 02:17:23.660835727 +0200
@@ -52,6 +52,12 @@ static struct grub_script_scope *scope =
 /* Wildcard translator for GRUB script.  */
 struct grub_script_wildcard_translator *grub_wildcard_translator;
 
+static int
+is_hex(char c)
+{
+  return ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'));
+}
+
 static char*
 wildcard_escape (const char *s)
 {
@@ -68,7 +74,15 @@ wildcard_escape (const char *s)
   i = 0;
   while ((ch = *s++))
     {
-      if (ch == '*' || ch == '\\' || ch == '?')
+      if (ch == '\\' && s[0] == 'x' && is_hex(s[1]) && is_hex(s[2]))
+	{
+	  p[i++] = ch;
+	  p[i++] = *s++;
+	  p[i++] = *s++;
+	  p[i++] = *s++;
+	  continue;
+	}
+      else if (ch == '*' || ch == '\\' || ch == '?')
 	p[i++] = '\\';
       p[i++] = ch;
     }
@@ -92,7 +106,14 @@ wildcard_unescape (const char *s)
   i = 0;
   while ((ch = *s++))
     {
-      if (ch == '\\')
+      if (ch == '\\' && s[0] == 'x' && is_hex(s[1]) && is_hex(s[2]))
+	{
+	  p[i++] = '\\';
+	  p[i++] = *s++;
+	  p[i++] = *s++;
+	  p[i++] = *s++;
+	}
+      else if (ch == '\\')
 	p[i++] = *s++;
       else
 	p[i++] = ch;
@@ -385,10 +406,20 @@ parse_string (const char *str,
     switch (*ptr)
       {
       case '\\':
-	escaped = !escaped;
-	if (!escaped && put)
-	  *((*put)++) = '\\';
-	ptr++;
+	if (!escaped && put && *(ptr+1) == 'x' && is_hex(*(ptr+2)) && is_hex(*(ptr+3)))
+	  {
+	    *((*put)++) = *ptr++;
+	    *((*put)++) = *ptr++;
+	    *((*put)++) = *ptr++;
+	    *((*put)++) = *ptr++;
+	  }
+	else
+	  {
+	    escaped = !escaped;
+	    if (!escaped && put)
+	      *((*put)++) = '\\';
+	    ptr++;
+	  }
 	break;
       case '$':
 	if (escaped)
