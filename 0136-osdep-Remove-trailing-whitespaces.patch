From 55e237b57dfd44fe5d294f23f82b5a0dece1a1cf Mon Sep 17 00:00:00 2001
From: Elyes Haouas <ehaouas@noos.fr>
Date: Fri, 4 Mar 2022 07:42:08 +0100
Subject: [PATCH 136/261] osdep: Remove trailing whitespaces

Signed-off-by: Elyes Haouas <ehaouas@noos.fr>
Reviewed-by: Daniel Kiper <daniel.kiper@oracle.com>
---
 grub-core/osdep/aros/getroot.c       |  2 +-
 grub-core/osdep/aros/hostdisk.c      |  2 +-
 grub-core/osdep/basic/compress.c     |  6 +++---
 grub-core/osdep/basic/platform.c     |  2 +-
 grub-core/osdep/bsd/getroot.c        |  2 +-
 grub-core/osdep/devmapper/hostdisk.c |  2 +-
 grub-core/osdep/freebsd/getroot.c    | 10 +++++-----
 grub-core/osdep/haiku/getroot.c      |  2 +-
 grub-core/osdep/haiku/hostdisk.c     |  2 +-
 grub-core/osdep/linux/blocklist.c    |  2 +-
 grub-core/osdep/linux/getroot.c      |  8 ++++----
 grub-core/osdep/unix/compress.c      |  6 +++---
 grub-core/osdep/unix/cputime.c       |  2 +-
 grub-core/osdep/unix/exec.c          |  2 +-
 grub-core/osdep/unix/getroot.c       |  6 +++---
 grub-core/osdep/unix/platform.c      |  6 +++---
 grub-core/osdep/unix/relpath.c       |  2 +-
 grub-core/osdep/windows/getroot.c    | 10 +++++-----
 grub-core/osdep/windows/hostdisk.c   |  8 ++++----
 grub-core/osdep/windows/init.c       |  2 +-
 grub-core/osdep/windows/password.c   |  4 ++--
 grub-core/osdep/windows/platform.c   |  4 ++--
 22 files changed, 46 insertions(+), 46 deletions(-)

diff --git a/grub-core/osdep/aros/getroot.c b/grub-core/osdep/aros/getroot.c
index a27df9eb9..aff6dc53e 100644
--- a/grub-core/osdep/aros/getroot.c
+++ b/grub-core/osdep/aros/getroot.c
@@ -193,7 +193,7 @@ grub_guess_root_devices (const char *path)
 
   os_dev = xmalloc (2 * sizeof (os_dev[0]));
   sz = strlen (nm);
-  
+
   os_dev[0] = xmalloc (sz + 4);
   os_dev[0][0] = '/';
   os_dev[0][1] = '/';
diff --git a/grub-core/osdep/aros/hostdisk.c b/grub-core/osdep/aros/hostdisk.c
index 3b2c9de24..6f83b3a89 100644
--- a/grub-core/osdep/aros/hostdisk.c
+++ b/grub-core/osdep/aros/hostdisk.c
@@ -572,7 +572,7 @@ get_temp_name (void)
   static int ctr = 0;
   char *t;
   struct stat st;
-  
+
   while (1)
     {
       t = xasprintf ("T:grub.%d.%d.%d.%d", (int) getpid (), (int) getppid (),
diff --git a/grub-core/osdep/basic/compress.c b/grub-core/osdep/basic/compress.c
index 9794640e8..dbca2906d 100644
--- a/grub-core/osdep/basic/compress.c
+++ b/grub-core/osdep/basic/compress.c
@@ -2,19 +2,19 @@
 #include <grub/util/install.h>
 #include <grub/util/misc.h>
 
-int 
+int
 grub_install_compress_gzip (const char *src, const char *dest)
 {
   grub_util_error (_("no compression is available for your platform"));
 }
 
-int 
+int
 grub_install_compress_xz (const char *src, const char *dest)
 {
   grub_util_error (_("no compression is available for your platform"));
 }
 
-int 
+int
 grub_install_compress_lzop (const char *src, const char *dest)
 {
   grub_util_error (_("no compression is available for your platform"));
diff --git a/grub-core/osdep/basic/platform.c b/grub-core/osdep/basic/platform.c
index a7dafd85a..68813de9a 100644
--- a/grub-core/osdep/basic/platform.c
+++ b/grub-core/osdep/basic/platform.c
@@ -26,7 +26,7 @@ grub_install_get_default_arm_platform (void)
 
 const char *
 grub_install_get_default_x86_platform (void)
-{ 
+{
   return "i386-pc";
 }
 
diff --git a/grub-core/osdep/bsd/getroot.c b/grub-core/osdep/bsd/getroot.c
index dbc6a2f2a..8793d1e30 100644
--- a/grub-core/osdep/bsd/getroot.c
+++ b/grub-core/osdep/bsd/getroot.c
@@ -193,7 +193,7 @@ grub_util_find_partition_start_os (const char *dev)
     p_index = dev[strlen(dev) - 1] - 'a';
   else
     p_index = -1;
-  
+
   if (p_index >= label.d_npartitions || p_index < 0)
     {
       grub_error (GRUB_ERR_BAD_DEVICE,
diff --git a/grub-core/osdep/devmapper/hostdisk.c b/grub-core/osdep/devmapper/hostdisk.c
index c8053728b..f98ecc53c 100644
--- a/grub-core/osdep/devmapper/hostdisk.c
+++ b/grub-core/osdep/devmapper/hostdisk.c
@@ -122,7 +122,7 @@ grub_util_get_dm_node_linear_info (dev_t dev,
       dmt = dm_task_create(DM_DEVICE_TABLE);
       if (!dmt)
 	break;
-      
+
       if (! (dm_task_set_major_minor (dmt, major, minor, 0)))
 	{
 	  dm_task_destroy (dmt);
diff --git a/grub-core/osdep/freebsd/getroot.c b/grub-core/osdep/freebsd/getroot.c
index b1e824495..2ff6bfa36 100644
--- a/grub-core/osdep/freebsd/getroot.c
+++ b/grub-core/osdep/freebsd/getroot.c
@@ -85,7 +85,7 @@ grub_util_get_geom_abstraction (const char *dev)
     {
       struct ggeom *geom;
       LIST_FOREACH (geom, &class->lg_geom, lg_geom)
-	{ 
+	{
 	  struct gprovider *provider;
 	  LIST_FOREACH (provider, &geom->lg_provider, lg_provider)
 	    if (strcmp (provider->lg_name, name) == 0)
@@ -167,7 +167,7 @@ grub_util_pull_device_os (const char *os_dev,
 	  {
 	    struct ggeom *geom;
 	    LIST_FOREACH (geom, &class->lg_geom, lg_geom)
-	      { 
+	      {
 		struct gprovider *provider;
 		LIST_FOREACH (provider, &geom->lg_provider, lg_provider)
 		  if (strcmp (provider->lg_name, name) == 0)
@@ -261,7 +261,7 @@ grub_util_get_grub_dev_os (const char *os_dev)
 	  {
 	    struct ggeom *geom;
 	    LIST_FOREACH (geom, &class->lg_geom, lg_geom)
-	      { 
+	      {
 		struct gprovider *provider;
 		LIST_FOREACH (provider, &geom->lg_provider, lg_provider)
 		  if (strcmp (provider->lg_name, name) == 0)
@@ -289,7 +289,7 @@ grub_util_get_grub_dev_os (const char *os_dev)
       }
       break;
 
-    default:  
+    default:
       break;
     }
 
@@ -325,7 +325,7 @@ grub_util_follow_gpart_up (const char *name, grub_disk_addr_t *off_out, char **n
     grub_util_error ("%s", _("couldn't find geom `part' class"));
 
   LIST_FOREACH (geom, &class->lg_geom, lg_geom)
-    { 
+    {
       struct gprovider *provider;
       LIST_FOREACH (provider, &geom->lg_provider, lg_provider)
 	if (strcmp (provider->lg_name, name) == 0)
diff --git a/grub-core/osdep/haiku/getroot.c b/grub-core/osdep/haiku/getroot.c
index 4e123c090..85ca2f5b9 100644
--- a/grub-core/osdep/haiku/getroot.c
+++ b/grub-core/osdep/haiku/getroot.c
@@ -66,7 +66,7 @@ grub_util_find_partition_start_os (const char *dev)
   if (ioctl (fd, B_GET_GEOMETRY, &geo, sizeof (geo)) < 0)
     return 0;
   ret /= geo.bytes_per_sector ? : 512;
-  close (fd);  
+  close (fd);
   return ret;
 }
 
diff --git a/grub-core/osdep/haiku/hostdisk.c b/grub-core/osdep/haiku/hostdisk.c
index 562353956..62d4d5b4c 100644
--- a/grub-core/osdep/haiku/hostdisk.c
+++ b/grub-core/osdep/haiku/hostdisk.c
@@ -52,7 +52,7 @@ grub_util_get_fd_size_os (grub_util_fd_t fd,
 {
   device_geometry part;
   unsigned lg;
-  if (ioctl (fd, B_GET_GEOMETRY, &part, sizeof (part)) < 0)  
+  if (ioctl (fd, B_GET_GEOMETRY, &part, sizeof (part)) < 0)
     return -1;
   for (lg = 0; (1 << lg) < part.bytes_per_sector; lg++);
   if (log_secsize)
diff --git a/grub-core/osdep/linux/blocklist.c b/grub-core/osdep/linux/blocklist.c
index c77d6085c..2efee2c2a 100644
--- a/grub-core/osdep/linux/blocklist.c
+++ b/grub-core/osdep/linux/blocklist.c
@@ -95,7 +95,7 @@ grub_install_get_blocklist (grub_device_t root_dev,
 	  if (ioctl (fd, FIBMAP, &blk) < 0)
 	    grub_util_error (_("can't retrieve blocklists: %s"),
 			     strerror (errno));
-	    
+
 	  rest = core_size - ((i * mul) << GRUB_DISK_SECTOR_BITS);
 	  if (rest <= 0)
 	    break;
diff --git a/grub-core/osdep/linux/getroot.c b/grub-core/osdep/linux/getroot.c
index df422c6d8..9cf037ec2 100644
--- a/grub-core/osdep/linux/getroot.c
+++ b/grub-core/osdep/linux/getroot.c
@@ -278,12 +278,12 @@ get_btrfs_fs_prefix (const char *mount_path)
   char *ret = NULL;
 
   fd = open (mount_path, O_RDONLY);
-	  
+
   if (fd < 0)
     return NULL;
   memset (&args, 0, sizeof(args));
   args.objectid = GRUB_BTRFS_TREE_ROOT_OBJECTID;
-  
+
   if (ioctl (fd, BTRFS_IOC_INO_LOOKUP, &args) < 0)
     goto fail;
   tree_id = args.treeid;
@@ -620,7 +620,7 @@ get_mdadm_uuid (const char *os_dev)
       if (strncmp (buf, "MD_UUID=", sizeof ("MD_UUID=") - 1) == 0)
 	{
 	  char *name_start, *ptri, *ptro;
-	  
+
 	  free (name);
 	  name_start = buf + sizeof ("MD_UUID=") - 1;
 	  ptro = name = xmalloc (strlen (name_start) + 1);
@@ -708,7 +708,7 @@ grub_util_is_imsm (const char *os_dev)
 		       sizeof ("MD_METADATA=imsm") - 1) == 0)
 	    {
 	      is_imsm = 1;
-	      grub_util_info ("%s is imsm", dev);	      
+	      grub_util_info ("%s is imsm", dev);
 	      break;
 	    }
 	}
diff --git a/grub-core/osdep/unix/compress.c b/grub-core/osdep/unix/compress.c
index dee56207f..a6e40086b 100644
--- a/grub-core/osdep/unix/compress.c
+++ b/grub-core/osdep/unix/compress.c
@@ -19,21 +19,21 @@
 #include <grub/emu/exec.h>
 #include <grub/util/install.h>
 
-int 
+int
 grub_install_compress_gzip (const char *src, const char *dest)
 {
   return grub_util_exec_redirect ((const char * []) { "gzip", "--best",
 	"--stdout", NULL }, src, dest);
 }
 
-int 
+int
 grub_install_compress_xz (const char *src, const char *dest)
 {
   return grub_util_exec_redirect ((const char * []) { "xz",
 	"--lzma2=dict=128KiB", "--check=none", "--stdout", NULL }, src, dest);
 }
 
-int 
+int
 grub_install_compress_lzop (const char *src, const char *dest)
 {
   return grub_util_exec_redirect ((const char * []) { "lzop", "-9",  "-c",
diff --git a/grub-core/osdep/unix/cputime.c b/grub-core/osdep/unix/cputime.c
index cff359a3b..7a8cbfd6b 100644
--- a/grub-core/osdep/unix/cputime.c
+++ b/grub-core/osdep/unix/cputime.c
@@ -17,6 +17,6 @@ grub_util_get_cpu_time_ms (void)
 	sc_clk_tck = 1000;
     }
 
-  times (&tm); 
+  times (&tm);
   return (tm.tms_utime * 1000ULL) / sc_clk_tck;
 }
diff --git a/grub-core/osdep/unix/exec.c b/grub-core/osdep/unix/exec.c
index e8db9202f..c44ff3360 100644
--- a/grub-core/osdep/unix/exec.c
+++ b/grub-core/osdep/unix/exec.c
@@ -88,7 +88,7 @@ grub_util_exec_redirect_all (const char *const *argv, const char *stdin_file,
     {
       int fd;
       /* Child.  */
-      
+
       /* Close fd's.  */
 #ifdef GRUB_UTIL
       grub_util_devmapper_cleanup ();
diff --git a/grub-core/osdep/unix/getroot.c b/grub-core/osdep/unix/getroot.c
index 74f69116d..f70c499bb 100644
--- a/grub-core/osdep/unix/getroot.c
+++ b/grub-core/osdep/unix/getroot.c
@@ -257,7 +257,7 @@ grub_util_find_root_devices_from_poolname (char *poolname)
       ret = getline (&line, &len, fp);
       if (ret == -1)
 	break;
-	
+
       if (sscanf (line, " %s %256s %256s %256s %256s %256s",
 		  name, state, readlen, writelen, cksum, notes) >= 5)
 	switch (st)
@@ -305,7 +305,7 @@ grub_util_find_root_devices_from_poolname (char *poolname)
 	      }
 	    break;
 	  }
-	
+
       free (line);
     }
 
@@ -449,7 +449,7 @@ grub_find_device (const char *dir, dev_t dev)
 
 	  cwd = xgetcwd ();
 	  res = xmalloc (strlen (cwd) + strlen (ent->d_name) + 3);
-	  sprintf (res, 
+	  sprintf (res,
 #if defined(__NetBSD__) || defined(__OpenBSD__)
 		   /* Convert this block device to its character (raw) device.  */
 		   "%s/r%s",
diff --git a/grub-core/osdep/unix/platform.c b/grub-core/osdep/unix/platform.c
index 55b8f4016..de712211c 100644
--- a/grub-core/osdep/unix/platform.c
+++ b/grub-core/osdep/unix/platform.c
@@ -164,13 +164,13 @@ grub_install_register_efi (grub_device_t efidir_grub_dev,
     ret = grub_util_exec ((const char * []){ "efibootmgr", "-q",
 	  "-c", "-d", efidir_disk,
 	  "-p", efidir_part_str, "-w",
-	  "-L", efi_distributor, "-l", 
+	  "-L", efi_distributor, "-l",
 	  efifile_path, NULL });
   else
     ret = grub_util_exec ((const char * []){ "efibootmgr",
 	  "-c", "-d", efidir_disk,
 	  "-p", efidir_part_str, "-w",
-	  "-L", efi_distributor, "-l", 
+	  "-L", efi_distributor, "-l",
 	  efifile_path, NULL });
   free (efidir_part_str);
   return ret;
@@ -235,7 +235,7 @@ grub_install_sgi_setup (const char *install_device,
 			const char *imgfile, const char *destname)
 {
   grub_util_exec ((const char * []){ "dvhtool", "-d",
-	install_device, "--unix-to-vh", 
+	install_device, "--unix-to-vh",
 	imgfile, destname, NULL });
   grub_util_warn ("%s", _("You will have to set `SystemPartition' and `OSLoader' manually."));
 }
diff --git a/grub-core/osdep/unix/relpath.c b/grub-core/osdep/unix/relpath.c
index f719950fd..f8430481e 100644
--- a/grub-core/osdep/unix/relpath.c
+++ b/grub-core/osdep/unix/relpath.c
@@ -128,7 +128,7 @@ grub_make_system_path_relative_to_its_root (const char *path)
   free (buf);
   buf3 = xstrdup (buf2 + offset);
   buf2[offset] = 0;
-  
+
   free (buf2);
 
   /* Remove trailing slashes, return empty string if root directory.  */
diff --git a/grub-core/osdep/windows/getroot.c b/grub-core/osdep/windows/getroot.c
index eada663b2..73c912664 100644
--- a/grub-core/osdep/windows/getroot.c
+++ b/grub-core/osdep/windows/getroot.c
@@ -119,16 +119,16 @@ grub_guess_root_devices (const char *dir)
     {
       free (dirwindows);
       grub_util_info ("can't get volume path name: %d", (int) GetLastError ());
-      return 0;      
+      return 0;
     }
 
   if (!mntpointwindows[0])
     {
       free (dirwindows);
       free (mntpointwindows);
-      return 0;      
+      return 0;
     }
-  
+
   for (ptr = mntpointwindows; *ptr; ptr++);
   if (*(ptr - 1) != '\\')
     {
@@ -255,7 +255,7 @@ grub_util_part_to_disk (const char *os_dev,
       free (name);
       return ret;
     }
-  
+
   CloseHandle (hd);
 
   *is_part = 1;
@@ -323,7 +323,7 @@ grub_util_find_partition_start_os (const char *os_dev)
       free (name);
       return 0;
     }
-  
+
   CloseHandle (hd);
   free (name);
   return exts.Extents[0].StartingOffset.QuadPart / 512;
diff --git a/grub-core/osdep/windows/hostdisk.c b/grub-core/osdep/windows/hostdisk.c
index 0be327394..428d81466 100644
--- a/grub-core/osdep/windows/hostdisk.c
+++ b/grub-core/osdep/windows/hostdisk.c
@@ -351,7 +351,7 @@ grub_canonicalize_file_name (const char *path)
     return NULL;
   ret = grub_util_tchar_to_utf8 (windows_path);
   free (windows_path);
- 
+
   return ret;
 }
 
@@ -359,7 +359,7 @@ void
 grub_util_mkdir (const char *dir)
 {
   LPTSTR windows_name;
-      
+
   windows_name = grub_util_get_windows_path (dir);
   CreateDirectory (windows_name, NULL);
   free (windows_name);
@@ -522,7 +522,7 @@ get_temp_name (void)
 	*ptr++ = '0' + r;
       else
 	*ptr++ = 'a' + (r - 10);
-    }  
+    }
   *ptr = '\0';
 
   return grub_util_tchar_to_utf8 (rt);
@@ -606,7 +606,7 @@ grub_util_get_mtime (const char *path)
   us_ul.LowPart = attr.ftLastWriteTime.dwLowDateTime;
   us_ul.HighPart = attr.ftLastWriteTime.dwHighDateTime;
 
-  return (us_ul.QuadPart / 10000000) 
+  return (us_ul.QuadPart / 10000000)
     - 86400ULL * 365 * (1970 - 1601)
     - 86400ULL * ((1970 - 1601) / 4) + 86400ULL * ((1970 - 1601) / 100);
 }
diff --git a/grub-core/osdep/windows/init.c b/grub-core/osdep/windows/init.c
index 6297de632..155a3e514 100644
--- a/grub-core/osdep/windows/init.c
+++ b/grub-core/osdep/windows/init.c
@@ -164,7 +164,7 @@ grub_util_host_init (int *argc __attribute__ ((unused)),
   *argv = xcalloc (*argc + 1, sizeof (argv[0]));
 
   for (i = 0; i < *argc; i++)
-    (*argv)[i] = grub_util_tchar_to_utf8 (targv[i]); 
+    (*argv)[i] = grub_util_tchar_to_utf8 (targv[i]);
   (*argv)[i] = NULL;
 #else
 #error "Unsupported TCHAR size"
diff --git a/grub-core/osdep/windows/password.c b/grub-core/osdep/windows/password.c
index 1d3af0c2c..a98c7f9ad 100644
--- a/grub-core/osdep/windows/password.c
+++ b/grub-core/osdep/windows/password.c
@@ -29,12 +29,12 @@
 int
 grub_password_get (char buf[], unsigned buf_size)
 {
-  HANDLE hStdin = GetStdHandle (STD_INPUT_HANDLE); 
+  HANDLE hStdin = GetStdHandle (STD_INPUT_HANDLE);
   DWORD mode = 0;
   char *ptr;
 
   grub_refresh ();
-  
+
   GetConsoleMode (hStdin, &mode);
   SetConsoleMode (hStdin, mode & (~ENABLE_ECHO_INPUT));
 
diff --git a/grub-core/osdep/windows/platform.c b/grub-core/osdep/windows/platform.c
index 253f8d101..d24fbd37e 100644
--- a/grub-core/osdep/windows/platform.c
+++ b/grub-core/osdep/windows/platform.c
@@ -104,14 +104,14 @@ get_platform (void)
     {
       platform = PLAT_BIOS;
       return;
-    }    
+    }
   platform = PLAT_EFI;
   return;
 }
 
 const char *
 grub_install_get_default_x86_platform (void)
-{ 
+{
   SYSTEM_INFO si;
 
   get_platform ();
-- 
2.36.1

